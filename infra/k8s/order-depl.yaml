apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order 
  template:
    metadata:
      labels:
        app: order
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox:latest
          command: ['sh', '-c', 'until nc -zv rabbit 5672; do echo "Waiting for RabbitMQ..."; sleep 5; done; echo "RabbitMQ is ready!"']

        - name: wait-for-postgres
          image: busybox:latest
          command: ['sh', '-c', 'until nc -zv order-postgres-srv 5432; do echo "Waiting for PostgreSQL..."; sleep 5; done; echo "PostgreSQL is ready!"']


      containers:
        - name: order
          image: tickerhub/order
          imagePullPolicy: IfNotPresent
          env:
            - name: JWT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_KEY
            - name: PSQL_PASS
              valueFrom:
                secretKeyRef:
                  name: order-pass
                  key: ORDER_PASS
            - name: PSQL_USER
              valueFrom:
                secretKeyRef:
                  name: order-user
                  key: ORDER_USER
            - name: PSQL_DB
              valueFrom:
                secretKeyRef:
                  name: order-db
                  key: ORDER_DB

            - name: PSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: order-host
                  key: ORDER_HOST

            - name: AMQP_URL
              valueFrom:
                secretKeyRef:
                  name: amqp-url
                  key: AMQP_URL
        
---

apiVersion: v1
kind: Service
metadata:
  name: order-srv
spec:
  selector:
    app: order
  ports:
    - name: order
      protocol: TCP
      port: 5000
      targetPort: 5000